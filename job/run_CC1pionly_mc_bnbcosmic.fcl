#include "services_microboone.fcl"
#include "config_particle_identification.fcl"
#include "calibration_microboone.fcl"
#include "caldata_microboone.fcl"
#include "config_particle_identification_fiducialvolume.fcl"
#include "config_particle_identification_braggalgo.fcl"

#include "CC1pi_common.fcl"

# I have commented out services in CC1pi_common for now because it overwrites something in Marco's code (not exactly sure what) and causes some events to fail his selection when they should pass.
# However, we need them here because we're not including Marco's fcl
services:
{
   TFileService: { fileName: "CC1pi_out.root" }
   #TimeTracker: {}
   #RandomNumberGenerator: {}
   message: @local::standard_info
   @table::microboone_simulation_services
   SpaceCharge: @local::microboone_spacecharge
   TPCEnergyCalib: @local::microboone_tpcenergycalib_service
}

services.DetectorClocksService.InheritClockConfig:   false
services.DetectorClocksService.TriggerOffsetTPC:     -400

services.SpaceCharge.EnableCorrSCE:       true
services.SpaceCharge.EnableSimEfieldSCE:  true
services.SpaceCharge.EnableSimSpatialSCE: true

physics.producermods: [ @sequence::cc1pi_producermods ]

physics.producers.pid.BraggAlgo: @local::braggalgo_mcc8

physics.producers.UBXSecpandoraNucali.TrackModuleLabel:       "pandoraNu::UBXSec"
physics.producers.UBXSecpandoraNucali.CalorimetryModuleLabel: "pandoraNucalo::UBXSec"
physics.producers.pid.ProducerLabels:
{
  TrackLabel       : "pandoraNu::UBXSec"
  CalorimetryLabel : "UBXSecpandoraNucali::CC1pi"
}
physics.producers.cc1piselec.TrackLabel:          "pandoraNu::UBXSec"
physics.producers.cc1piselec.CalorimetryLabel:    "UBXSecpandoraNucali::CC1pi"
physics.producers.cc1piselec.SelectionLabel:      "UBXSec::UBXSec"
physics.producers.cc1piselec.ParticleIdChi2Label: "pandoraNupid::UBXSec"
