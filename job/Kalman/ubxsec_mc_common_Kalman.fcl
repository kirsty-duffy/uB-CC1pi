#include "services_microboone.fcl"
#include "singles_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "correct_saturation.fcl"
#include "caldata_microboone.fcl" 
#include "time_memory_tracker_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "calibration_microboone.fcl"
#include "tpcneutrinoidfilter_microboone.fcl"

#include "ubxsec_mc.fcl"

process_name : UBXSec      #The process name must NOT contain any underscores

ubxsec_mc_services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "output.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator                                                                                          
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
  @table::microboone_simulation_services
  #BackTracker:             @local::microboone_backtracker
  SpaceCharge:             @local::microboone_spacecharge
}


ubxsec_mc_services.PmtGainService.PmtGainProvider.UseDB:                   false
ubxsec_mc_services.ChannelStatusService.ChannelStatusProvider.UseDB:       false
ubxsec_mc_services.DetPedestalService.DetPedestalRetrievalAlg.UseDB:       false
ubxsec_mc_services.ElectronicsCalibService.ElectronicsCalibProvider.UseDB: false

ubxsec_mc_services.DetectorPropertiesService.NumberTimeSamples:        6400
ubxsec_mc_services.DetectorPropertiesService.ReadOutWindowSize:        6400
ubxsec_mc_services.DetectorClocksService.InheritClockConfig:           false
ubxsec_mc_services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3
ubxsec_mc_services.DetectorClocksService.TrigModuleName:               "daq"

ubxsec_mc_services.SpaceCharge.EnableCorrSCE:       true
ubxsec_mc_services.SpaceCharge.EnableSimEfieldSCE:  true
ubxsec_mc_services.SpaceCharge.EnableSimSpatialSCE: true

#ubxsec_mc_services.Geometry.ForceUseFCLOnly:                           true

#ubxsec_mc_services.TimeTracker.printSummary:                           false
#ubxsec_mc_services.TimeTracker.dbOutput:                               {}

#ubxsec_mc_services.MemoryTracker.printSummaries:                       []
#ubxsec_mc_services.MemoryTracker.includeMallocInfo:                    false
#ubxsec_mc_services.MemoryTracker.dbOutput.filename:                    ""

ubxsec_mc_services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     append:     true       #says to append all messages to the output
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}

services:
{
  @table::ubxsec_mc_services
}


#source is now a root file
source:
{ 
  module_type: RootInput 
  maxEvents:   -1        # Number of events to create
  inputCommands: ["keep *_*_*_*", "drop raw::OpDetWaveforms_DataApr2016RecoStage1_saturation_*"]
}


physics:
{

 producers:
 {
   @table::ubxsec_mc_reco
   @table::ubxsec_mc_flashmatch
   NuMuCCSelectionII: @local::microboone_tpcNeutrinoID  #CCPi0 Selection 
   Calorimetry: @local::microboone_calibrationdedx
   #@table::ubxsec_acpt
 }

 filters:
 {
   @table::ubxsec_mc_filter 
   tpcneutrinoidfilterccpi0: @local::microboone_tpcneutrinoidfilter  #CCPi0 Filter
 }

 analyzers:
 {
   @table::ubxsec_mc_ana
 }

 #reco sequence and trigger_paths to be defined elsewhere
}



outputs:
{
 out1:
 { 
   module_type: RootOutput
   fileName:    "%ifb_%tc_ubxsec.root"
   dataTier:    "reco"
   compressionLevel: 1
   outputCommands: [
            "keep *_*_*_*"]
#            "keep recob::Track_*_pandoraCosmic_*",
#            "drop raw::RawDigits_*_*_*",
#            "drop recob::Cluster_*_*_*",
#            "drop recob::EndPoint2D_*_*_*",
#            "drop recob::Hit_*_*_*",
#            "drop recob::Vertex_*_*_*",
#            "drop recob::Wires_*_*_*",
#            "drop recob::PFParticle_*_*_*",
#            "drop recob::Wire_*_*_*",
#            "drop raw::OpDetWaveform_*_*_*",
#            "drop *_*_*_McRecoAprStage1",
#            "drop *_*_*_DetSim"]
   }
}
