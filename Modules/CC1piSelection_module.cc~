////////////////////////////////////////////////////////////////////////
// Class:       CC1piSelection
// Plugin Type: producer (art v2_05_01)
// File:        CC1piSelection_module.cc
//
// Generated at Fri Jan 19 09:15:19 2018 by Kirsty Duffy using cetskelgen
// from cetlib version v1_21_00.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDProducer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "canvas/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"

#include <memory>

class CC1piSelection;


class CC1piSelection : public art::EDProducer {
public:
  explicit CC1piSelection(fhicl::ParameterSet const & p);
  // The compiler-generated destructor is fine for non-base
  // classes without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  CC1piSelection(CC1piSelection const &) = delete;
  CC1piSelection(CC1piSelection &&) = delete;
  CC1piSelection & operator = (CC1piSelection const &) = delete;
  CC1piSelection & operator = (CC1piSelection &&) = delete;

  // Required functions.
  void produce(art::Event & e) override;

private:

  // Declare member data here.

};


CC1piSelection::CC1piSelection(fhicl::ParameterSet const & p)
// :
// Initialize member data here.
{
  // Call appropriate produces<>() functions here.
}

void CC1piSelection::produce(art::Event & e)
{
  // Implementation of required member function here.
}

DEFINE_ART_MODULE(CC1piSelection)
